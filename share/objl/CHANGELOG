14 August, 2006:
- Added examples
- Changed ObjL_Object:recieve() to ObjL_Object:receive() in comm.lua
- Fixed calls to said method
- Fixed gsub patterns in line 78 of comm.lua
- Made those values that should be local into local variables in comm.lua, et al
- Cleaned up conveluted ~= statements to use ~= in comm.lua, et al
- Added 5.1 package compatibility (creates module ObjLua)
- Fixed ObjL.serialize(), ObjL.unserialize(), and ObjL_Object.receive() in 
  doc/api.txt
- Added installer for POSIX systems
- Added README, LICENSE, and INSTALL files
- Added a copy of the LGPL (LGPL.txt)
- Released version 0.01beta
- Added doc/objects.txt (tutorial and cheatsheat on objects)
- Added ObjL.makethread()
- Added ObjL.help()
- Fixed extra arg passing in the function generated by ObjL_Object:forward()
- Added metamethods to ObjL_Object -- __newindex(), __add(), __sub(), __mul(), 
__unm(), __concat()
- Made ObjL.serialize() serialize all types (though somewhat unreliably)
- Made metamethod __newindex() save dumpables of all functions
- Added src/ directory with experimental standalone interpreter
15 August, 2006
- Fixed saving of lightuserdata in ObjL.serialize()
- Added object-based serialize method: ObjL_Object:serialize()
- Fixed functionsave-based memory leak possibility in object's __newindex() 
metamethod
- Added capacity for differentiating between local message and remote message in
ObjL_Object:forward()
- Added __tostring() metamethod to object, making it call ObjL.serialize()
- Added AUTHORS file
- Added THANKS file
- Released version 0.02alpha
19 August, 2006
- Removed src/* -- too big for something that doesn't work.
- Commented out the src/ bit of install.sh
- Created tools/
- Created tools/autogen_docs.lua and tools/autogen_loader.lua
- Created TODO
- Created doc/objl_c_interface.txt
- Created doc/README
- Created src/objl_misc.h
- Created doc/capi_helpers.txt
- Edited doc/objl_c_interface.txt to reference capi_helpers.txt
- Edited doc/README to reference to doc/capi_helpers.txt
- Edited README to list directories and their content.
- Made install.sh install the headers in src/ to /usr/include/ObjL/
- Released version 0.03alpha
20 August, 2006
- Added src/ObjL.c (standalone wrapper)
- Added src/build.sh and src/clean.sh
- Set install.sh to build and install standalone wrapper
- Fixed require statements in lib/ObjL.lua
- Commented out require in lib/obj.lua
- Renamed lib/obj.lua to lib/objl_obj.lua and lib/comm.lua to lib/objl_comm.lua
- Fixed __newindex() metamethod in objl_obj.lua to not call itself
- Released version 0.03beta
- Added test/
- Added test/objtest.lua
- Prepended "return " to the string /o/ passed to loadstring() in 
ObjL.unserialize()
21 August, 2006
- Fixed error in test/objtest.lua
- Changed src/ObjL.c to src/ObjL.cpp , set it to concatenate std::string 
objects instead of c strings, and changed the gcc in build.sh to g++
- Added the test routines to install.sh
- Made examples/robinhood.lua use the ObjL standalone wrapper as an interpreter
- Made lib/objl_obj.lua initialise ObjL_Object.forwards
- Made examples/robinhood.lua run ObjL.makethread() on the initializing 
function instead of just running it.
- Changed examples/robinhood.lua from network-based forwarding to local 
forwarding
- Prepended all calls to member functions from inside said member with "self:" 
in examples/robinhood.lua
- Added nil arguments to forward() calls in examples/robinhood.lua
- Released 0.03beta2
22 August, 2006
- Fixed local forwarding code in lib/objl_comm.lua to wrap the function 
instead of setting it.
- Made ObjL_Object.forward() receive asynchronously to better support the Actor 
model
- Added doc/actor.txt
- Added reference to doc/actor.txt to doc/README
- Added slicing to ObjL_Object metamethods __index() and __newindex()
- Added __call() metamethod to ObjL_Object for slicing purposes
- Added doc/slicing.txt
- Added test/arraytest.lua
- Referred to test/ in README
- Released 0.04alpha
23 August, 2006
- Fixed ObjL_Object.recieve() to work on non-function variables and to do 
assignments
- Created ObjL_Object.forwardvar() for virtual shared memory via forwarding
- Made default values for ObjL_Object.forward() params /port/ and /address/
- Added forwardvar() to doc/api.txt and to ObjL.help()
- Added mention of forwardvar() to doc/actor.txt
- Fixed calling method in ObjL_Object metamethod __call()
- Added transparent support for forwarded variables in ObjL_Object metamethods 
__index() and __newindex()
- Fixed obiwan indexing error in slice code
- Made code in test/arraytest.lua compatible with above fix
- Made install.sh run all tests
- Made tools/makedist.sh for making distributions of ObjL
- Released 0.05alpha

